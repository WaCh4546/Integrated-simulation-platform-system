import cv2
import socket
import numpy as np
VandA=[[	-0.01	,	0.31	,	0.15	,	0	,	0	,	0	],
[	-0.030026311	,	0.371537768	,	0.227415773	,	-0.015609404	,	0.008406937	,	0.011435814	],
[	-0.007759681	,	0.377776378	,	0.248156313	,	-0.031218809	,	0.016813874	,	0.022871627	],
[	0.006591217	,	0.178139317	,	0.161182084	,	0.004132976	,	-0.052623679	,	0.028917973	],
[	0.041570712	,	0.924188822	,	0.586629416	,	0.164791465	,	-0.001486319	,	0.085446307	],
[	0.039543174	,	0.778629523	,	0.508941578	,	-0.021201656	,	0.023629119	,	0.023247851	],
[	0.043539418	,	0.563881899	,	0.389889135	,	-0.032312835	,	-0.035485207	,	-0.011286211	],
[	0.03434286	,	0.54781008	,	0.375545486	,	-0.00074608	,	-0.01310567	,	0.015265055	],
[	0.068443749	,	0.545486825	,	0.374207179	,	-0.004096922	,	0.005526309	,	0.008148559	],
[	0.037479366	,	0.190768088	,	0.149922042	,	-0.064820335	,	-0.002930247	,	-0.022371354	],
[	0.0204898	,	0.014789009	,	0.063779182	,	-0.045984496	,	0.009164428	,	-0.005337695	],
[	0.012616831	,	-0.01542337	,	0.056945642	,	0.047788119	,	-0.025523944	,	-0.017983819	],
[	0.029724057	,	0.025028228	,	0.018942039	,	-0.050474984	,	-0.04702399	,	0.025690588	],
[	0.025785107	,	0.018741132	,	0.032884835	,	-0.004943365	,	-0.050802793	,	0.002493732	],
[	0.018479407	,	0.01212851	,	0.019197035	,	-0.015558943	,	0.006633963	,	0.010843974	],
[	0.009284656	,	0.004820992	,	0.015911495	,	-0.000733372	,	0.011920624	,	0.011206019	],
[	0.048076665	,	0.13352275	,	0.077226726	,	0.04440851	,	0.012667584	,	0.011258859	],
[	0.099288661	,	0.842937426	,	0.495972814	,	0.135982541	,	0.013742867	,	0.021724611	],
[	0.109271049	,	1.116149673	,	0.694913708	,	0.075348875	,	0.022318272	,	0.037311337	],
[	0.076182725	,	0.979180499	,	0.628465988	,	-0.004940813	,	0.019623283	,	-0.005589264	],
[	0.11157522	,	0.980325825	,	0.613390238	,	0.055556788	,	0.014373029	,	-0.003472471	],
[	0.132772662	,	0.97706366	,	0.619296832	,	-0.01803882	,	0.045450132	,	0.000841437	],
[	0.142670391	,	0.975008315	,	0.621004769	,	-0.013228228	,	0.022739539	,	-0.000128366	],
[	0.12034517	,	0.854985175	,	0.520787588	,	-0.032450857	,	-0.029131169	,	-0.031201032	],
[	0.089990663	,	0.76497386	,	0.475949925	,	0.011505645	,	-0.004688781	,	-0.030023189	],
[	0.087928534	,	0.655042338	,	0.440662897	,	0.016323791	,	-0.03333909	,	-0.028241543	],
[	0.125870466	,	0.698859299	,	0.452384746	,	-0.011503705	,	0.031798421	,	-0.01986039	],
[	0.091985811	,	0.710836508	,	0.472202868	,	0.040360697	,	0.01049883	,	-0.027775172	],
[	0.044171626	,	0.339283383	,	0.218637522	,	-0.100563117	,	0.011516919	,	-0.037068398	],
[	0.016332282	,	0.011907313	,	0.024269314	,	-0.08497132	,	-0.013089746	,	0.008844054	],
[	0.015183902	,	0.087865537	,	0.058663262	,	0.039145624	,	-0.018288455	,	-0.000588332	],
[	0.02958206	,	0.202726963	,	0.129355081	,	0.022973356	,	-0.00872296	,	-0.021334255	],
[	0.021425108	,	0.109051351	,	0.061200397	,	-0.017806853	,	-0.000420551	,	0.004235991	],
[	0.010930031	,	0.011353192	,	0.024776447	,	-0.008809968	,	-0.040297668	,	0.012496671	],
[	0.049061747	,	0.376399381	,	0.225479816	,	0.067218379	,	0.020319427	,	0.038609029	],
[	0.041794534	,	0.409638174	,	0.224830018	,	0.013727636	,	0.042993733	,	0.005647983	],
[	0.321152781	,	0.709310382	,	0.382612612	,	-0.01790987	,	0.20919216	,	0.064176653	],
[	-0.070147045	,	0.845967625	,	0.604411965	,	0.183178363	,	-0.433281253	,	-0.056284902	],
[	0.143838823	,	0.950330073	,	0.623917411	,	-0.07167263	,	0.189615617	,	0.035828718	],
[	0.15074644	,	0.875534869	,	0.713092841	,	0.162874805	,	0.019939357	,	-0.138695443	],
[	0.209110786	,	1.044776119	,	0.746268657	,	-0.228571033	,	0.007078451	,	0.07058196	],
[	0.18762586	,	0.967855884	,	0.811378766	,	0.413173528	,	0.015655988	,	-0.058956197	],
[	0.260743232	,	1.14713317	,	0.893691255	,	-0.161741517	,	0.005631628	,	0.0333665	],
[	0.262741061	,	1.025970065	,	0.822713828	,	-0.063216845	,	0.019735464	,	-0.006089401	],
[	0.269525915	,	1.070784626	,	0.849336678	,	0.014367243	,	0.00237829	,	0.019820737	],
[	0.305405571	,	1.158804875	,	0.870102521	,	-0.035100442	,	0.015780844	,	0.022767326	],
[	0.308104967	,	1.211625706	,	0.858595329	,	-0.040744032	,	-0.001781054	,	0.001111331	],
[	0.245739419	,	1.23137385	,	0.836642119	,	-0.002868934	,	-0.034983307	,	0.011050364	],
[	0.193875299	,	1.293554063	,	0.816410992	,	0.011485801	,	-0.020923335	,	0.01575131	],
[	0.230602435	,	1.301639654	,	0.857708621	,	0.040994461	,	0.023732447	,	0.005343725	],
[	0.197714018	,	1.315261891	,	0.857683213	,	0.016874092	,	0.008813063	,	-0.011370764	],
[	0.176544695	,	1.363055514	,	0.839110136	,	-0.00902672	,	-0.026685436	,	0.038340419	],
[	0.202946586	,	1.314709797	,	0.817383012	,	-0.005564194	,	0.02312828	,	-0.04946211	],
[	0.183553356	,	1.381057128	,	0.843457412	,	0.034873718	,	-0.022315021	,	-0.030436316	],
[	0.176198153	,	0.933413732	,	0.64180596	,	-0.041000611	,	0.036743599	,	-0.014552082	],
[	0.163445235	,	0.250114224	,	0.386736453	,	0.320166515	,	-0.441165618	,	0.664214569	],
[	0.083445235	,	0.140114224	,	0.196736453	,	0.160166515	,	-0.221165618	,	0.334214569	],
[	0.023445235	,	0.050114224	,	0.066736453	,	0.060166515	,	-0.081165618	,	0.104214569	],
[	0	,	0	,	0	,	0	,	0	,	0	]]

def data_process(msg,m,n):
        rz=int(round(msg[0]*m   ,4) *10000)
        ry=int(round(msg[1]*m ,4) *10000)
        rx=int(round(msg[2]*m ,4) *10000)
        dx=int(round(msg[3]*n ,4) *10000)
        dy=int(round(msg[4]*n ,4) *10000)
        dz=int(round(msg[5]*n ,4) *10000)
        print(rz/10000,ry/10000,rx/10000,dx/10000,dy/10000,dz/10000)

        new_msg = np.array(
            (rz,ry,rx, dx, dy,dz),
            dtype=np.uint32)
        return new_msg

cap = cv2.VideoCapture('DJI_0011.MP4')
init_f1=230
init_f2=80
step_f=20
cap.set(cv2.CAP_PROP_POS_FRAMES ,init_f1)
ret, frame0 = cap.read()
frame0=cv2.resize(frame0, (960, 540))
cv2.imshow("Video",frame0)
while cv2.waitKey(100) != 32:
    pass

PORT=54321
HOST_LOCAL=("10.102.3.154",PORT)
HOST_OBJ=("10.102.3.213",PORT)
a=socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
a.bind(HOST_LOCAL)

cap.set(cv2.CAP_PROP_POS_FRAMES ,init_f1+init_f2)
ret, frame1 = cap.read()
a.sendto(data_process(VandA[0],2,10), HOST_OBJ)
f=0
i=1
key=0
while ret and key!=27:  
    frame1=cv2.resize(frame1, (960, 540))
    cv2.imshow("Video",frame1)
    key=cv2.waitKey(33)
    if f%20==0:
        a.sendto(data_process(VandA[i],2,10), HOST_OBJ)
        if i <len(VandA)-1:
            i=i+1
    f+=1
    ret, frame1 = cap.read()
a.close()
cap.release()